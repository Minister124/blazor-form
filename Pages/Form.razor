@page "/form"
@inject NavigationManager NavigationManager

<EditForm Model="@form" OnValidSubmit="@HandleSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">
        <label for="FirstName">FirstName:</label>
        <InputText id="FirstName" class="form-control" @bind-Value="form.FirstName"/>
    </div>
    <div class="form-group">
        <label for="LastName">LastName:</label>
        <InputText id="LastName" class="form-control" @bind-Value="form.LastName" />
    </div>
    <div class="form-group">
        <label for="Email">Email:</label>
        <InputText id="Email" class="form-control" @bind-Value="form.Email" />
    </div>
    <div class="form-group">
        <label for="PhoneNumber">Phone:</label>
        <InputText id="Phone" class="form-control" @bind-Value="form.PhoneNumber" />
    </div>
    <div class="form-group">
        <label for="Hobbies">Hobbies:</label>
        <InputSelect id="Hobbies" class="form-control" @bind-Value="form.Hobbies" multiple>
            @foreach(var hobby in hobbies)
            {
                <option value="@hobby">@hobby.Name</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="Address">Address:</label>
        <InputText id="Address" class="form-control" @bind-Value="form.Address" />
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    public List<Hobby> hobbies;
    Data.Models.Form form = new Data.Models.Form();
    Data.Services.FormData formData = new Data.Services.FormData();

    protected override void OnInitialized()
    {
        hobbies = HobbySeed.RetrieveHobbiesData();
        base.OnInitialized();
    }
    public async Task HandleSubmit()
    {
        form.Hobbies = form.Hobbies ?? new List<Hobby>();
        await formData.SaveFormDataInJson(form, JSRuntime);
        form = new Data.Models.Form();
        NavigationManager.NavigateTo("/formData");
        //await App.Current.MainPage.DisplayAlert("Form Added", "Form Added To Json", "OK");
        await JSRuntime.InvokeVoidAsync("showNotification", "Form submitted successfully!");
    }
}
